name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos:   [windows, linux, darwin]
        goarch: [amd64, arm64]
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.2'

    - name: Build ${{ matrix.goos }}_${{ matrix.goarch }} (${{
        matrix.flavour }})
      shell: bash
      run: |
        mkdir -p build
        [[ "${{ matrix.goos }}" == "windows" ]] && EXT=".exe" || EXT=""

        OUT="build/up_${{ github.ref_name }}_${{ matrix.goos }}_${{ matrix.goarch }}${EXT}"

        GOOS=${{ matrix.goos }} \
        GOARCH=${{ matrix.goarch }} \
        CGO_ENABLED=0 \
        go build \
          -trimpath \
          -buildvcs=false \
          -ldflags "-s -w -X 'main.Version=${{ github.ref_name }}'" \
          -o "$OUT" ./${{ matrix.type }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: up_${{ github.ref_name }}_${{ matrix.goos }}_${{ matrix.goarch }}
        path: build/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./build

    - name: Create GitHub release
      uses: softprops/action-gh-release@v2
      with:
        files: ./build/**
        name: "Release ${{ github.ref_name }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
